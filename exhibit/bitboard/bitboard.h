#ifndef _BITBOARD_H_
#define _BITBOARD_H_

#include <stdio.h>
#include <string.h>
#include "const.h"

/*--------------------------------------
二次元座標(x, y)を64ビットのビットボードに変換する。
マスとビットの関係は下の通り。

  | A| B| C| D| E| F| G| H
--+--+--+--+--+--+--+--+--
1 | 0| 1| 2| 3| 4| 5| 6| 7
--+--+--+--+--+--+--+--+--
2 | 8| 9|10|11|12|13|14|15
--+--+--+--+--+--+--+--+--
3 |16|17|18|19|20|21|22|23
--+--+--+--+--+--+--+--+--
4 |24|25|26|27|28|29|30|31
--+--+--+--+--+--+--+--+--
5 |32|33|34|35|36|37|38|39
--+--+--+--+--+--+--+--+--
6 |40|41|42|43|44|45|46|47
--+--+--+--+--+--+--+--+--
7 |48|49|50|51|52|53|54|55
--+--+--+--+--+--+--+--+--
8 |56|57|58|59|60|61|62|63

戻り値:
    変換されたビットボード
--------------------------------------*/
bitboard coord2bit(
    int x, // 二次元座標のx
    int y  // 二次元座標のy
);

/*--------------------------------------
ビットボードについて何ビット立っているかを調べる。

戻り値:
    立っているビット数
--------------------------------------*/
int standing_bit(
    bitboard x // 調べるビットボード
);

/*--------------------------------------
デバッグ用。ビットボードを簡易的に出力して確認する。
--------------------------------------*/
void print_bit(
    bitboard n // 出力するビットボード
);

#endif